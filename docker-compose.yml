version: "3"
services:
  server:
    container_name: server
    # Tell docker what file to build the server from
    build:
      context: ./Server
      dockerfile: Dockerfile
    # The ports to expose
    expose:
      - 4000
    # Environment variables
    environment:
      - MONGO_URI=mongodb+srv://admin:admin@cluster0.rro5i.mongodb.net/myFirstDatabase?retryWrites=true&w=majority
      - PORT=4000
      - JWT_SECRET=secretsecret
      - JWT_EXPIRY=30d
      - DEBUG=worker:*
      - MORGAN=combined
      - NODE_ENV=development
    # Port mapping
    ports:
      - 4000:4000
    # Volumes to mount
    volumes:
      - ./Server:/app/server
      -  /var/run/docker.sock:/var/run/docker.sock:ro

    # Run command
    # Nodemon for hot reloading (-L flag required for polling in Docker)
    command: nodemon -L src/server.js
    # Connect to other containers
    # Restart action
    restart: always
    links: 
      - java
      - gcc
      - mono
      - py
      - mongo
  client:
    container_name: client 
    build:
      context: ./Client
      dockerfile: Dockerfile
    environment:
      - REACT_APP_PORT=3000
      - CHOKIDAR_USEPOLLING=true
    expose:
      - 3000
    ports:
      - 3000:3000
    volumes:
      - ./Client/src:/app/client/src
      - ./Client/public:/app/client/public
    links:
      - server
    command: npm  start
    restart: always
    # restart: always
  nginx:
    image: nginx:latest
    container_name: nginx_container
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - server
  py:
    image:  python:3.8.12-alpine3.14
    # build:
    #   context: ./Docker
    #   dockerfile: Dockerfile-py
    # platform: linux/x86_64
    environment:
      - PYTHONUNBUFFERED=0
      - PYTHONIOENCODING=UTF-8
    container_name: py 
    restart: always
    volumes:
      - ./Server:/app/server
    # working_dir: /app/server/src/Complie/codes
    tty: true
  gcc:
    image:  gcc:latest
    # platform: linux/x86_64
    restart: always
    container_name: gcc
    volumes:
      - ./Server:/app/server
    # working_dir: /Server/Complie/codes
    tty: true
  java: 
    image:  openjdk:11-oraclelinux8
    platform: linux/x86_64
    container_name: java 
    volumes:
      - ./Server:/app/server
    # working_dir: /Server/Complie/codes
    # restart: always
    tty: true
  mono:
    image: mono:latest
    container_name: mono
    volumes:
      - ./Server:/app/server
    # working_dir: /Server/Complie/codes
    restart: always
    tty: true
  mongodb:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=db
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      # seeding scripts
      # named volumes
      - ./database:/data/db
    restart: always
volumes:
  Server:
    external: true



